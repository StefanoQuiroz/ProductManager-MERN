{"version":3,"sources":["components/AnimalList.js","components/AnimalForm.js","components/AnimalManager.js","App.js","reportWebVitals.js","index.js"],"names":["AnimalList","props","datos","setDatos","history","useHistory","Row","Table","map","items","index","Button","color","style","margin","onClick","event","id","_id","push","icon","faEye","faPen","Swal","fire","title","text","showCancelButton","then","result","value","axios","delete","response","deleteData","filter","catch","err","faTrash","nombre","tipo","tamanho","AnimalForm","ver","crear","modificar","useNombre","useRef","useTipo","useColor","useTamanho","useParams","useState","input","setInput","setTipo","useEffect","get","data","volver","onChange","target","name","Container","Form","onSubmit","preventDefault","put","findIndex","res","splice","post","concat","error","message","current","form","Col","md","FormGroup","Label","for","Input","ref","type","disabled","AnimalManager","to","faPlus","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb0c99f3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Row, Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faTrash, faPen} from '@fortawesome/free-solid-svg-icons';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\n\r\nconst AnimalList = (props) => {\r\n    const { datos, setDatos} = props;\r\n    const history = useHistory()\r\n    const ver = (event, id) => {\r\n        history.push(`/ver/${id}`)\r\n    }\r\n\r\n    const modificar = (event, id) => {\r\n        history.push(`/modificar/${id}`);\r\n    }\r\n\r\n    const borrar = (event, id) => {\r\n        Swal.fire({\r\n            icon: \"warning\",\r\n            title: \"Eminar animal\",\r\n            text: \"¿Esta seguro quedesea eliminar el animal?\",\r\n            showCancelButton: true\r\n        }).then(result => {\r\n            if(result.value){\r\n                axios.delete(` http://localhost:8000/api/animales/delete/${id}`)\r\n                    .then(response => {\r\n                        const deleteData = datos.filter(response => response._id !== id);\r\n                        setDatos(deleteData);\r\n                    })\r\n                    .catch(err => Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"error\",\r\n                        text: \"Error al eliminar el animal\"\r\n                    }))\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <Row>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Acciones</th>\r\n                        <th>Nombre</th>\r\n                        <th>Tipo</th>\r\n                        <th>Color</th>\r\n                        <th>Tamaño</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {datos && datos.map((items, index) => (\r\n                        <tr key={index}>\r\n                            <td>\r\n                                <Button color=\"primary\" style={{margin:'2px'}} onClick={(event) => ver(event, items._id)}><FontAwesomeIcon icon={faEye}/> Ver</Button>\r\n                                <Button color=\"secondary\" style={{margin:'2px'}} onClick={(event) => modificar(event, items._id)}><FontAwesomeIcon icon={faPen}/> Editar</Button>\r\n                                <Button color=\"danger\" style={{margin:'2px'}} onClick={(event) => borrar(event, items._id)}><FontAwesomeIcon icon={faTrash}/></Button>\r\n                            </td>\r\n                            <td>{items.nombre}</td>\r\n                            <td>{items.tipo}</td>\r\n                            <td>{items.color}</td>\r\n                            <td>{items.tamanho}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>            \r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default AnimalList;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Container, Form, Row, Col, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\n\r\nconst AnimalForm = (props) => {\r\n    const history = useHistory();\r\n    const {ver, crear, modificar } = props;\r\n    const useNombre = useRef(null);\r\n    const useTipo = useRef(null);\r\n    const useColor = useRef(null);\r\n    const useTamanho = useRef(null);\r\n    const {id} = useParams();\r\n    \r\n    const [input, setInput] = useState({\r\n        nombre:\"\",\r\n        tipo: \"\",\r\n        color: \"\",\r\n        tamanho: \"\"\r\n    });\r\n       \r\n    const [tipo, setTipo] = useState([]);\r\n    \r\n    const {datos, setDatos} = props\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:8000/api/animales\")\r\n            .then(response => setTipo(response.data.data))\r\n            .catch(err => Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'No se encuentra el tipo de animal requerido!'\r\n            }))\r\n        \r\n        if(id){\r\n            axios.get(`http://localhost:8000/api/animales/${id}`)\r\n                .then(response => setInput(response.data.data))\r\n                .catch(err => Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: `No se encuentra el tipo de animal con el id: ${id} requerido`\r\n                }))\r\n        }\r\n    },[id])\r\n\r\n    const volver = (event) => {\r\n        history.push(`/`);\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {name, value} = event.target;\r\n        setInput({\r\n            ...input,\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    const editar = (event) => {\r\n        axios.put(`http://localhost:8000/api/animales/update/${id}`, input)\r\n            .then(response => {\r\n                const index = datos.findIndex( res => res._id === id);\r\n                datos.splice(index, 1, input);//primero agrega\r\n                setDatos(datos); // luego modifica\r\n                volver(event) // luego presenta\r\n\r\n            })\r\n            .catch(err => Swal.fire({\r\n                icon: 'error',\r\n                title:'Error',\r\n                text:'Ha ocurrido un problema al actualizar los datos del animal'\r\n            }))\r\n    }\r\n\r\n    const crearAnimal = (event) => {\r\n        axios.post(\"http://localhost:8000/api/animales/new\", input)\r\n            .then(response => {\r\n                if(response.data.data){\r\n                    volver(event);\r\n                    setDatos(datos.concat([response.data.data]));\r\n                } else {\r\n                    Swal.fire({\r\n                        icon: \"error\",\r\n                        title: \"Error al crear los datos\",\r\n                        text: response.data.error.message\r\n                    })\r\n                }\r\n            })\r\n            .catch (err => Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: 'Ha ocurrido un problema al crear un nuevo animal usuario'\r\n            }) )\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(id){\r\n            editar();\r\n        } else{\r\n            crearAnimal();\r\n        }\r\n        useNombre.current.value=\"\";\r\n        useTipo.current.value=\"\";\r\n        useColor.current.value=\"\";\r\n        useTamanho.current.value=\"\";\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <h1>{ver ? `Ver ${input.nombre}` : (modificar ? `Editar ${input.nombre}` : `Nuevo Animal`)}</h1>\r\n            </Row>\r\n            <Form onSubmit={onSubmit}>\r\n            <Row form>\r\n                <Col md={6}>\r\n                    <FormGroup>\r\n                        <Label for=\"nombre\">Nombre del Animal</Label>\r\n                        <Input ref={useNombre} type=\"text\" name=\"nombre\" id=\"nombre\" value={input.nombre} onChange={onChange} disabled={ver}/>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                    <FormGroup>\r\n                        <Label for=\"tipo\">Tipo del Animal</Label>\r\n                        <Input ref={useTipo} type=\"text\" name=\"tipo\" id=\"tipo\" value={input.tipo} onChange={onChange} disabled={ver}/>\r\n                        {/* <Input ref={useTipo} type=\"select\" name=\"tipo\" id=\"tipo\" value={input.tipo} onChange={onChange} disabled={ver}>\r\n                            {tipo && tipo.map((options, index)=>(\r\n                            <option key={index} value={options.tipo}>\r\n                                {options.tipo}\r\n                            </option>))}\r\n                        </Input> */}\r\n                    </FormGroup>\r\n                </Col>\r\n                </Row>             \r\n            <Row form>\r\n                <Col md={6}>\r\n                    <FormGroup>\r\n                        <Label for=\"color\">Color del Animal</Label>\r\n                        <Input ref={useColor} type=\"text\" name=\"color\" id=\"color\" value={input.color} onChange={onChange} disabled={ver}/>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                    <FormGroup>\r\n                        <Label for=\"tam\">Tamaño del Animal</Label>\r\n                        <Input ref={useTamanho} type=\"select\" name=\"tamanho\" id=\"tam\" value={input.tamanho} onChange={onChange} disabled={ver}>\r\n                            <option>Seleccione</option>\r\n                            <option value=\"Pequeho\">Pequeño</option>\r\n                            <option value=\"Mediano\">Mediano</option>\r\n                            <option value=\"Grande\">Grande</option>\r\n                        </Input>\r\n                    </FormGroup>\r\n                </Col>\r\n                </Row>\r\n                <Row form>\r\n                    <Col>\r\n                        { crear && <Button style={{margin:'2px'}} type=\"submit\">Crear</Button>}\r\n                        { modificar && <Button style={{margin:'2px'}} type=\"submit\">Modificar</Button>}\r\n                        <Button style={{margin:'2px'}} type=\"button\" onClick={(event) => volver(event)}>Home</Button>\r\n                    </Col>\r\n                </Row>             \r\n            </Form>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default AnimalForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport AnimalList from './AnimalList';\r\nimport AnimalForm from './AnimalForm';\r\nimport { Row } from 'reactstrap';\r\nimport { BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst AnimalManager = () => {\r\n\r\n    //const {path, url} = useRouteMatch();\r\n\r\n    const [datos, setDatos] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/animales\")\r\n        .then(response => setDatos(response.data.data))\r\n        .catch(err => Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error al obtener los datos',\r\n            text: 'Ocurrió un problema al ntentar obtener el listado de animales'\r\n        }));\r\n    }, [])\r\n\r\n     return (\r\n        <Row>\r\n            <Router>\r\n            <Link to={`/crear`}>\r\n                <FontAwesomeIcon icon={faPlus}/>\r\n            </Link>\r\n                <Switch>\r\n                    <Route path={`/crear`}>\r\n                        <AnimalForm crear={true}  datos={datos} setDatos={setDatos}/>\r\n                    </Route>\r\n                    <Route path={`/ver/:id`}>\r\n                        <AnimalForm ver={true}/>\r\n                    </Route>\r\n                    <Route path={`/modificar/:id`} >\r\n                        <AnimalForm modificar={true} datos={datos} setDatos={setDatos}/>\r\n                    </Route>\r\n                    <Route path={`/`}>\r\n                        <AnimalList datos={datos} setDatos={setDatos}/>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default AnimalManager;\r\n","import React from 'react';\nimport './App.css';\nimport AnimalManager from './components/AnimalManager';\nimport { Container } from 'reactstrap';\n\nfunction App() {\n  return (\n    <Container>\n      <AnimalManager/>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}